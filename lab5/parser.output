Terminals unused in grammar

    FOR_DEC
    FOR_EXP1
    FOR_EXP2
    FOR_EXP3
    UMINUS
    DPLUS


Grammar

    0 $accept: program $end

    1 program: ExtDefList

    2 ExtDefList: %empty
    3           | ExtDef ExtDefList

    4 ExtDef: Specifier ExtDecList SEMI
    5       | Specifier ArrayDec SEMI
    6       | Specifier FuncDec CompSt
    7       | error SEMI

    8 Specifier: TYPE

    9 ExtDecList: VarDec
   10           | VarDec COMMA ExtDecList

   11 VarDec: ID

   12 FuncDec: ID LP VarList RP
   13        | ID LP RP
   14        | error RP

   15 INT_L: INT_LITERAL

   16 ArrayDec: LB INT_L RB ID
   17         | error RB

   18 ArrayList: LB Exp RB

   19 VarList: ParamDec
   20        | ParamDec COMMA VarList

   21 ParamDec: Specifier VarDec

   22 CompSt: LC DefList StmList RC
   23       | error RC

   24 StmList: %empty
   25        | Stmt StmList

   26 Stmt: Exp SEMI
   27     | CompSt
   28     | RETURN Exp SEMI
   29     | IF LP Exp RP Stmt
   30     | IF LP Exp RP Stmt ELSE Stmt
   31     | WHILE LP Exp RP Stmt
   32     | FOR LP ForDec RP Stmt
   33     | BREAK SEMI
   34     | CONTINUE SEMI

   35 ForDec: ForExp1 SEMI ForExp2 SEMI ForExp3

   36 ForExp1: DecList

   37 ForExp2: Exp

   38 ForExp3: Exp

   39 DefList: %empty
   40        | Def DefList

   41 Def: Specifier DecList SEMI
   42    | Specifier ArrayDec SEMI

   43 DecList: Dec
   44        | Dec COMMA DecList

   45 Dec: VarDec
   46    | VarDec ASSIGNOP Exp

   47 Exp: Exp ASSIGNOP Exp
   48    | Exp AND Exp
   49    | Exp OR Exp
   50    | Exp RELOP Exp
   51    | Exp PLUS Exp
   52    | Exp MINUS Exp
   53    | Exp MUL Exp
   54    | Exp DIV Exp
   55    | Exp ADDASS Exp
   56    | Exp MINUSASS Exp
   57    | NOT Exp
   58    | SELFADD Exp
   59    | Exp SELFADD
   60    | Exp SELFMINUS
   61    | SELFMINUS Exp
   62    | ID LP Args RP
   63    | ID LP RP
   64    | ID
   65    | INT_LITERAL
   66    | CHAR_LITERAL
   67    | ID ArrayList

   68 Args: Exp COMMA Args
   69     | Exp


Terminals, with rules where they appear

    $end (0) 0
    error (256) 7 14 17 23
    INT_LITERAL <type_int> (258) 15 65
    ID <type_id> (259) 11 12 13 16 62 63 64 67
    RELOP <type_id> (260) 50
    TYPE <type_id> (261) 8
    CHAR_LITERAL <type_char> (262) 66
    LP (263) 12 13 29 30 31 32 62 63
    RP (264) 12 13 14 29 30 31 32 62 63
    LC (265) 22
    RC (266) 22 23
    SEMI (267) 4 5 7 26 28 33 34 35 41 42
    COMMA (268) 10 20 44 68
    LB (269) 16 18
    RB (270) 16 17 18
    PLUS (271) 51
    MINUS (272) 52
    MUL (273) 53
    DIV (274) 54
    ASSIGNOP (275) 46 47
    AND (276) 48
    OR (277) 49
    NOT (278) 57
    ADDASS (279) 55
    MINUSASS (280) 56
    SELFADD (281) 58 59
    SELFMINUS (282) 60 61
    IF (283) 29 30
    ELSE (284) 30
    WHILE (285) 31
    RETURN (286) 28
    FOR (287) 32
    CONTINUE (288) 34
    BREAK (289) 33
    FOR_DEC (290)
    FOR_EXP1 (291)
    FOR_EXP2 (292)
    FOR_EXP3 (293)
    UMINUS (294)
    DPLUS (295)
    LOWER_THEN_ELSE (296)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program <ptr> (43)
        on left: 1
        on right: 0
    ExtDefList <ptr> (44)
        on left: 2 3
        on right: 1 3
    ExtDef <ptr> (45)
        on left: 4 5 6 7
        on right: 3
    Specifier <ptr> (46)
        on left: 8
        on right: 4 5 6 21 41 42
    ExtDecList <ptr> (47)
        on left: 9 10
        on right: 4 10
    VarDec <ptr> (48)
        on left: 11
        on right: 9 10 21 45 46
    FuncDec <ptr> (49)
        on left: 12 13 14
        on right: 6
    INT_L <ptr> (50)
        on left: 15
        on right: 16
    ArrayDec <ptr> (51)
        on left: 16 17
        on right: 5 42
    ArrayList <ptr> (52)
        on left: 18
        on right: 67
    VarList <ptr> (53)
        on left: 19 20
        on right: 12 20
    ParamDec <ptr> (54)
        on left: 21
        on right: 19 20
    CompSt <ptr> (55)
        on left: 22 23
        on right: 6 27
    StmList <ptr> (56)
        on left: 24 25
        on right: 22 25
    Stmt <ptr> (57)
        on left: 26 27 28 29 30 31 32 33 34
        on right: 25 29 30 31 32
    ForDec <ptr> (58)
        on left: 35
        on right: 32
    ForExp1 <ptr> (59)
        on left: 36
        on right: 35
    ForExp2 <ptr> (60)
        on left: 37
        on right: 35
    ForExp3 <ptr> (61)
        on left: 38
        on right: 35
    DefList <ptr> (62)
        on left: 39 40
        on right: 22 40
    Def <ptr> (63)
        on left: 41 42
        on right: 40
    DecList <ptr> (64)
        on left: 43 44
        on right: 36 41 44
    Dec <ptr> (65)
        on left: 45 46
        on right: 43 44
    Exp <ptr> (66)
        on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
        on right: 18 26 28 29 30 31 37 38 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 68 69
    Args <ptr> (67)
        on left: 68 69
        on right: 62 68


State 0

    0 $accept: . program $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    $end  reduce using rule 2 (ExtDefList)

    program     go to state 3
    ExtDefList  go to state 4
    ExtDef      go to state 5
    Specifier   go to state 6


State 1

    7 ExtDef: error . SEMI

    SEMI  shift, and go to state 7


State 2

    8 Specifier: TYPE .

    $default  reduce using rule 8 (Specifier)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 8


State 4

    1 program: ExtDefList .

    $default  reduce using rule 1 (program)


State 5

    3 ExtDefList: ExtDef . ExtDefList

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    $end  reduce using rule 2 (ExtDefList)

    ExtDefList  go to state 9
    ExtDef      go to state 5
    Specifier   go to state 6


State 6

    4 ExtDef: Specifier . ExtDecList SEMI
    5       | Specifier . ArrayDec SEMI
    6       | Specifier . FuncDec CompSt

    error  shift, and go to state 10
    ID     shift, and go to state 11
    LB     shift, and go to state 12

    ExtDecList  go to state 13
    VarDec      go to state 14
    FuncDec     go to state 15
    ArrayDec    go to state 16


State 7

    7 ExtDef: error SEMI .

    $default  reduce using rule 7 (ExtDef)


State 8

    0 $accept: program $end .

    $default  accept


State 9

    3 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 3 (ExtDefList)


State 10

   14 FuncDec: error . RP
   17 ArrayDec: error . RB

    RP  shift, and go to state 17
    RB  shift, and go to state 18


State 11

   11 VarDec: ID .
   12 FuncDec: ID . LP VarList RP
   13        | ID . LP RP

    LP  shift, and go to state 19

    $default  reduce using rule 11 (VarDec)


State 12

   16 ArrayDec: LB . INT_L RB ID

    INT_LITERAL  shift, and go to state 20

    INT_L  go to state 21


State 13

    4 ExtDef: Specifier ExtDecList . SEMI

    SEMI  shift, and go to state 22


State 14

    9 ExtDecList: VarDec .
   10           | VarDec . COMMA ExtDecList

    COMMA  shift, and go to state 23

    $default  reduce using rule 9 (ExtDecList)


State 15

    6 ExtDef: Specifier FuncDec . CompSt

    error  shift, and go to state 24
    LC     shift, and go to state 25

    CompSt  go to state 26


State 16

    5 ExtDef: Specifier ArrayDec . SEMI

    SEMI  shift, and go to state 27


State 17

   14 FuncDec: error RP .

    $default  reduce using rule 14 (FuncDec)


State 18

   17 ArrayDec: error RB .

    $default  reduce using rule 17 (ArrayDec)


State 19

   12 FuncDec: ID LP . VarList RP
   13        | ID LP . RP

    TYPE  shift, and go to state 2
    RP    shift, and go to state 28

    Specifier  go to state 29
    VarList    go to state 30
    ParamDec   go to state 31


State 20

   15 INT_L: INT_LITERAL .

    $default  reduce using rule 15 (INT_L)


State 21

   16 ArrayDec: LB INT_L . RB ID

    RB  shift, and go to state 32


State 22

    4 ExtDef: Specifier ExtDecList SEMI .

    $default  reduce using rule 4 (ExtDef)


State 23

   10 ExtDecList: VarDec COMMA . ExtDecList

    ID  shift, and go to state 33

    ExtDecList  go to state 34
    VarDec      go to state 14


State 24

   23 CompSt: error . RC

    RC  shift, and go to state 35


State 25

   22 CompSt: LC . DefList StmList RC

    TYPE  shift, and go to state 2

    $default  reduce using rule 39 (DefList)

    Specifier  go to state 36
    DefList    go to state 37
    Def        go to state 38


State 26

    6 ExtDef: Specifier FuncDec CompSt .

    $default  reduce using rule 6 (ExtDef)


State 27

    5 ExtDef: Specifier ArrayDec SEMI .

    $default  reduce using rule 5 (ExtDef)


State 28

   13 FuncDec: ID LP RP .

    $default  reduce using rule 13 (FuncDec)


State 29

   21 ParamDec: Specifier . VarDec

    ID  shift, and go to state 33

    VarDec  go to state 39


State 30

   12 FuncDec: ID LP VarList . RP

    RP  shift, and go to state 40


State 31

   19 VarList: ParamDec .
   20        | ParamDec . COMMA VarList

    COMMA  shift, and go to state 41

    $default  reduce using rule 19 (VarList)


State 32

   16 ArrayDec: LB INT_L RB . ID

    ID  shift, and go to state 42


State 33

   11 VarDec: ID .

    $default  reduce using rule 11 (VarDec)


State 34

   10 ExtDecList: VarDec COMMA ExtDecList .

    $default  reduce using rule 10 (ExtDecList)


State 35

   23 CompSt: error RC .

    $default  reduce using rule 23 (CompSt)


State 36

   41 Def: Specifier . DecList SEMI
   42    | Specifier . ArrayDec SEMI

    error  shift, and go to state 43
    ID     shift, and go to state 33
    LB     shift, and go to state 12

    VarDec    go to state 44
    ArrayDec  go to state 45
    DecList   go to state 46
    Dec       go to state 47


State 37

   22 CompSt: LC DefList . StmList RC

    error         shift, and go to state 24
    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    LC            shift, and go to state 25
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53
    IF            shift, and go to state 54
    WHILE         shift, and go to state 55
    RETURN        shift, and go to state 56
    FOR           shift, and go to state 57
    CONTINUE      shift, and go to state 58
    BREAK         shift, and go to state 59

    RC  reduce using rule 24 (StmList)

    CompSt   go to state 60
    StmList  go to state 61
    Stmt     go to state 62
    Exp      go to state 63


State 38

   40 DefList: Def . DefList

    TYPE  shift, and go to state 2

    $default  reduce using rule 39 (DefList)

    Specifier  go to state 36
    DefList    go to state 64
    Def        go to state 38


State 39

   21 ParamDec: Specifier VarDec .

    $default  reduce using rule 21 (ParamDec)


State 40

   12 FuncDec: ID LP VarList RP .

    $default  reduce using rule 12 (FuncDec)


State 41

   20 VarList: ParamDec COMMA . VarList

    TYPE  shift, and go to state 2

    Specifier  go to state 29
    VarList    go to state 65
    ParamDec   go to state 31


State 42

   16 ArrayDec: LB INT_L RB ID .

    $default  reduce using rule 16 (ArrayDec)


State 43

   17 ArrayDec: error . RB

    RB  shift, and go to state 18


State 44

   45 Dec: VarDec .
   46    | VarDec . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 66

    $default  reduce using rule 45 (Dec)


State 45

   42 Def: Specifier ArrayDec . SEMI

    SEMI  shift, and go to state 67


State 46

   41 Def: Specifier DecList . SEMI

    SEMI  shift, and go to state 68


State 47

   43 DecList: Dec .
   44        | Dec . COMMA DecList

    COMMA  shift, and go to state 69

    $default  reduce using rule 43 (DecList)


State 48

   65 Exp: INT_LITERAL .

    $default  reduce using rule 65 (Exp)


State 49

   62 Exp: ID . LP Args RP
   63    | ID . LP RP
   64    | ID .
   67    | ID . ArrayList

    LP  shift, and go to state 70
    LB  shift, and go to state 71

    $default  reduce using rule 64 (Exp)

    ArrayList  go to state 72


State 50

   66 Exp: CHAR_LITERAL .

    $default  reduce using rule 66 (Exp)


State 51

   57 Exp: NOT . Exp

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 73


State 52

   58 Exp: SELFADD . Exp

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 74


State 53

   61 Exp: SELFMINUS . Exp

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 75


State 54

   29 Stmt: IF . LP Exp RP Stmt
   30     | IF . LP Exp RP Stmt ELSE Stmt

    LP  shift, and go to state 76


State 55

   31 Stmt: WHILE . LP Exp RP Stmt

    LP  shift, and go to state 77


State 56

   28 Stmt: RETURN . Exp SEMI

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 78


State 57

   32 Stmt: FOR . LP ForDec RP Stmt

    LP  shift, and go to state 79


State 58

   34 Stmt: CONTINUE . SEMI

    SEMI  shift, and go to state 80


State 59

   33 Stmt: BREAK . SEMI

    SEMI  shift, and go to state 81


State 60

   27 Stmt: CompSt .

    $default  reduce using rule 27 (Stmt)


State 61

   22 CompSt: LC DefList StmList . RC

    RC  shift, and go to state 82


State 62

   25 StmList: Stmt . StmList

    error         shift, and go to state 24
    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    LC            shift, and go to state 25
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53
    IF            shift, and go to state 54
    WHILE         shift, and go to state 55
    RETURN        shift, and go to state 56
    FOR           shift, and go to state 57
    CONTINUE      shift, and go to state 58
    BREAK         shift, and go to state 59

    RC  reduce using rule 24 (StmList)

    CompSt   go to state 60
    StmList  go to state 83
    Stmt     go to state 62
    Exp      go to state 63


State 63

   26 Stmt: Exp . SEMI
   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    RELOP      shift, and go to state 84
    SEMI       shift, and go to state 85
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    ASSIGNOP   shift, and go to state 90
    AND        shift, and go to state 91
    OR         shift, and go to state 92
    ADDASS     shift, and go to state 93
    MINUSASS   shift, and go to state 94
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96


State 64

   40 DefList: Def DefList .

    $default  reduce using rule 40 (DefList)


State 65

   20 VarList: ParamDec COMMA VarList .

    $default  reduce using rule 20 (VarList)


State 66

   46 Dec: VarDec ASSIGNOP . Exp

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 97


State 67

   42 Def: Specifier ArrayDec SEMI .

    $default  reduce using rule 42 (Def)


State 68

   41 Def: Specifier DecList SEMI .

    $default  reduce using rule 41 (Def)


State 69

   44 DecList: Dec COMMA . DecList

    ID  shift, and go to state 33

    VarDec   go to state 44
    DecList  go to state 98
    Dec      go to state 47


State 70

   62 Exp: ID LP . Args RP
   63    | ID LP . RP

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    RP            shift, and go to state 99
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp   go to state 100
    Args  go to state 101


State 71

   18 ArrayList: LB . Exp RB

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 102


State 72

   67 Exp: ID ArrayList .

    $default  reduce using rule 67 (Exp)


State 73

   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   57    | NOT Exp .
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    $default  reduce using rule 57 (Exp)


State 74

   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   58    | SELFADD Exp .
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    $default  reduce using rule 58 (Exp)


State 75

   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS
   61    | SELFMINUS Exp .

    $default  reduce using rule 61 (Exp)


State 76

   29 Stmt: IF LP . Exp RP Stmt
   30     | IF LP . Exp RP Stmt ELSE Stmt

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 103


State 77

   31 Stmt: WHILE LP . Exp RP Stmt

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 104


State 78

   28 Stmt: RETURN Exp . SEMI
   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    RELOP      shift, and go to state 84
    SEMI       shift, and go to state 105
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    ASSIGNOP   shift, and go to state 90
    AND        shift, and go to state 91
    OR         shift, and go to state 92
    ADDASS     shift, and go to state 93
    MINUSASS   shift, and go to state 94
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96


State 79

   32 Stmt: FOR LP . ForDec RP Stmt

    ID  shift, and go to state 33

    VarDec   go to state 44
    ForDec   go to state 106
    ForExp1  go to state 107
    DecList  go to state 108
    Dec      go to state 47


State 80

   34 Stmt: CONTINUE SEMI .

    $default  reduce using rule 34 (Stmt)


State 81

   33 Stmt: BREAK SEMI .

    $default  reduce using rule 33 (Stmt)


State 82

   22 CompSt: LC DefList StmList RC .

    $default  reduce using rule 22 (CompSt)


State 83

   25 StmList: Stmt StmList .

    $default  reduce using rule 25 (StmList)


State 84

   50 Exp: Exp RELOP . Exp

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 109


State 85

   26 Stmt: Exp SEMI .

    $default  reduce using rule 26 (Stmt)


State 86

   51 Exp: Exp PLUS . Exp

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 110


State 87

   52 Exp: Exp MINUS . Exp

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 111


State 88

   53 Exp: Exp MUL . Exp

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 112


State 89

   54 Exp: Exp DIV . Exp

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 113


State 90

   47 Exp: Exp ASSIGNOP . Exp

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 114


State 91

   48 Exp: Exp AND . Exp

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 115


State 92

   49 Exp: Exp OR . Exp

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 116


State 93

   55 Exp: Exp ADDASS . Exp

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 117


State 94

   56 Exp: Exp MINUSASS . Exp

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp  go to state 118


State 95

   59 Exp: Exp SELFADD .

    $default  reduce using rule 59 (Exp)


State 96

   60 Exp: Exp SELFMINUS .

    $default  reduce using rule 60 (Exp)


State 97

   46 Dec: VarDec ASSIGNOP Exp .
   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    RELOP      shift, and go to state 84
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    ASSIGNOP   shift, and go to state 90
    AND        shift, and go to state 91
    OR         shift, and go to state 92
    ADDASS     shift, and go to state 93
    MINUSASS   shift, and go to state 94
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96

    $default  reduce using rule 46 (Dec)


State 98

   44 DecList: Dec COMMA DecList .

    $default  reduce using rule 44 (DecList)


State 99

   63 Exp: ID LP RP .

    $default  reduce using rule 63 (Exp)


State 100

   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS
   68 Args: Exp . COMMA Args
   69     | Exp .

    RELOP      shift, and go to state 84
    COMMA      shift, and go to state 119
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    ASSIGNOP   shift, and go to state 90
    AND        shift, and go to state 91
    OR         shift, and go to state 92
    ADDASS     shift, and go to state 93
    MINUSASS   shift, and go to state 94
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96

    $default  reduce using rule 69 (Args)


State 101

   62 Exp: ID LP Args . RP

    RP  shift, and go to state 120


State 102

   18 ArrayList: LB Exp . RB
   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    RELOP      shift, and go to state 84
    RB         shift, and go to state 121
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    ASSIGNOP   shift, and go to state 90
    AND        shift, and go to state 91
    OR         shift, and go to state 92
    ADDASS     shift, and go to state 93
    MINUSASS   shift, and go to state 94
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96


State 103

   29 Stmt: IF LP Exp . RP Stmt
   30     | IF LP Exp . RP Stmt ELSE Stmt
   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    RELOP      shift, and go to state 84
    RP         shift, and go to state 122
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    ASSIGNOP   shift, and go to state 90
    AND        shift, and go to state 91
    OR         shift, and go to state 92
    ADDASS     shift, and go to state 93
    MINUSASS   shift, and go to state 94
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96


State 104

   31 Stmt: WHILE LP Exp . RP Stmt
   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    RELOP      shift, and go to state 84
    RP         shift, and go to state 123
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    ASSIGNOP   shift, and go to state 90
    AND        shift, and go to state 91
    OR         shift, and go to state 92
    ADDASS     shift, and go to state 93
    MINUSASS   shift, and go to state 94
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96


State 105

   28 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 28 (Stmt)


State 106

   32 Stmt: FOR LP ForDec . RP Stmt

    RP  shift, and go to state 124


State 107

   35 ForDec: ForExp1 . SEMI ForExp2 SEMI ForExp3

    SEMI  shift, and go to state 125


State 108

   36 ForExp1: DecList .

    $default  reduce using rule 36 (ForExp1)


State 109

   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   50    | Exp RELOP Exp .
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96

    $default  reduce using rule 50 (Exp)


State 110

   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   51    | Exp PLUS Exp .
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96

    $default  reduce using rule 51 (Exp)


State 111

   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   52    | Exp MINUS Exp .
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96

    $default  reduce using rule 52 (Exp)


State 112

   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   53    | Exp MUL Exp .
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96

    $default  reduce using rule 53 (Exp)


State 113

   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   54    | Exp DIV Exp .
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96

    $default  reduce using rule 54 (Exp)


State 114

   47 Exp: Exp . ASSIGNOP Exp
   47    | Exp ASSIGNOP Exp .
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    RELOP      shift, and go to state 84
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    AND        shift, and go to state 91
    OR         shift, and go to state 92
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96

    $default  reduce using rule 47 (Exp)


State 115

   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   48    | Exp AND Exp .
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    RELOP      shift, and go to state 84
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96

    $default  reduce using rule 48 (Exp)


State 116

   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   49    | Exp OR Exp .
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    RELOP      shift, and go to state 84
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    AND        shift, and go to state 91
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96

    $default  reduce using rule 49 (Exp)


State 117

   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   55    | Exp ADDASS Exp .
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    RELOP      shift, and go to state 84
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    ASSIGNOP   shift, and go to state 90
    AND        shift, and go to state 91
    OR         shift, and go to state 92
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96

    $default  reduce using rule 55 (Exp)


State 118

   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   56    | Exp MINUSASS Exp .
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    RELOP      shift, and go to state 84
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    ASSIGNOP   shift, and go to state 90
    AND        shift, and go to state 91
    OR         shift, and go to state 92
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96

    $default  reduce using rule 56 (Exp)


State 119

   68 Args: Exp COMMA . Args

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    Exp   go to state 100
    Args  go to state 126


State 120

   62 Exp: ID LP Args RP .

    $default  reduce using rule 62 (Exp)


State 121

   18 ArrayList: LB Exp RB .

    $default  reduce using rule 18 (ArrayList)


State 122

   29 Stmt: IF LP Exp RP . Stmt
   30     | IF LP Exp RP . Stmt ELSE Stmt

    error         shift, and go to state 24
    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    LC            shift, and go to state 25
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53
    IF            shift, and go to state 54
    WHILE         shift, and go to state 55
    RETURN        shift, and go to state 56
    FOR           shift, and go to state 57
    CONTINUE      shift, and go to state 58
    BREAK         shift, and go to state 59

    CompSt  go to state 60
    Stmt    go to state 127
    Exp     go to state 63


State 123

   31 Stmt: WHILE LP Exp RP . Stmt

    error         shift, and go to state 24
    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    LC            shift, and go to state 25
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53
    IF            shift, and go to state 54
    WHILE         shift, and go to state 55
    RETURN        shift, and go to state 56
    FOR           shift, and go to state 57
    CONTINUE      shift, and go to state 58
    BREAK         shift, and go to state 59

    CompSt  go to state 60
    Stmt    go to state 128
    Exp     go to state 63


State 124

   32 Stmt: FOR LP ForDec RP . Stmt

    error         shift, and go to state 24
    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    LC            shift, and go to state 25
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53
    IF            shift, and go to state 54
    WHILE         shift, and go to state 55
    RETURN        shift, and go to state 56
    FOR           shift, and go to state 57
    CONTINUE      shift, and go to state 58
    BREAK         shift, and go to state 59

    CompSt  go to state 60
    Stmt    go to state 129
    Exp     go to state 63


State 125

   35 ForDec: ForExp1 SEMI . ForExp2 SEMI ForExp3

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    ForExp2  go to state 130
    Exp      go to state 131


State 126

   68 Args: Exp COMMA Args .

    $default  reduce using rule 68 (Args)


State 127

   29 Stmt: IF LP Exp RP Stmt .
   30     | IF LP Exp RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 132

    $default  reduce using rule 29 (Stmt)


State 128

   31 Stmt: WHILE LP Exp RP Stmt .

    $default  reduce using rule 31 (Stmt)


State 129

   32 Stmt: FOR LP ForDec RP Stmt .

    $default  reduce using rule 32 (Stmt)


State 130

   35 ForDec: ForExp1 SEMI ForExp2 . SEMI ForExp3

    SEMI  shift, and go to state 133


State 131

   37 ForExp2: Exp .
   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    RELOP      shift, and go to state 84
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    ASSIGNOP   shift, and go to state 90
    AND        shift, and go to state 91
    OR         shift, and go to state 92
    ADDASS     shift, and go to state 93
    MINUSASS   shift, and go to state 94
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96

    $default  reduce using rule 37 (ForExp2)


State 132

   30 Stmt: IF LP Exp RP Stmt ELSE . Stmt

    error         shift, and go to state 24
    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    LC            shift, and go to state 25
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53
    IF            shift, and go to state 54
    WHILE         shift, and go to state 55
    RETURN        shift, and go to state 56
    FOR           shift, and go to state 57
    CONTINUE      shift, and go to state 58
    BREAK         shift, and go to state 59

    CompSt  go to state 60
    Stmt    go to state 134
    Exp     go to state 63


State 133

   35 ForDec: ForExp1 SEMI ForExp2 SEMI . ForExp3

    INT_LITERAL   shift, and go to state 48
    ID            shift, and go to state 49
    CHAR_LITERAL  shift, and go to state 50
    NOT           shift, and go to state 51
    SELFADD       shift, and go to state 52
    SELFMINUS     shift, and go to state 53

    ForExp3  go to state 135
    Exp      go to state 136


State 134

   30 Stmt: IF LP Exp RP Stmt ELSE Stmt .

    $default  reduce using rule 30 (Stmt)


State 135

   35 ForDec: ForExp1 SEMI ForExp2 SEMI ForExp3 .

    $default  reduce using rule 35 (ForDec)


State 136

   38 ForExp3: Exp .
   47 Exp: Exp . ASSIGNOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   51    | Exp . PLUS Exp
   52    | Exp . MINUS Exp
   53    | Exp . MUL Exp
   54    | Exp . DIV Exp
   55    | Exp . ADDASS Exp
   56    | Exp . MINUSASS Exp
   59    | Exp . SELFADD
   60    | Exp . SELFMINUS

    RELOP      shift, and go to state 84
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MUL        shift, and go to state 88
    DIV        shift, and go to state 89
    ASSIGNOP   shift, and go to state 90
    AND        shift, and go to state 91
    OR         shift, and go to state 92
    ADDASS     shift, and go to state 93
    MINUSASS   shift, and go to state 94
    SELFADD    shift, and go to state 95
    SELFMINUS  shift, and go to state 96

    $default  reduce using rule 38 (ForExp3)
